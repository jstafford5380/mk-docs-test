{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"test/","text":"Test C# Java public class Foo : Bar { } public class Foo implements Bar { }","title":"Test"},{"location":"test/#test","text":"C# Java public class Foo : Bar { } public class Foo implements Bar { }","title":"Test"},{"location":"entities/common/","text":"Common Objects and Conventions Entity Envelope for various entity kinds. apiVersion * Attribute Type Type string Constraints regex: ^curator\\/v[0-9]+$ Obtained From Development Platform Team Version of the entity object and enclosed specs. kind * Attribute Type Type string Constraints oneOf(Solution\\|Component\\|Resource) Obtained From Development Platform Team Describes the 'kind' contained within the spec . Value Description Solution Logical grouping of components and/or resource that make up a single solution or capability. Component A physically deployable and maintained entity within the system such as a service (e.g. API, worker, job, pipeline, etc.) or package (e.g. NuGet, Maven, NPM, etc.). Resource An infrastructure dependency for a component such as a database, cache, service bus, etc. metadata * Attribute Type Type Metadata Constraints Metadata Obtained From Enterprise Architecture (EA) spec * Attribute Type Type see: Entity Types Constraints Dictated by kind Obtained From Curator Devs Example apiVersion: curator/v1 kind: Component metadata: # omitted for brevity spec: # omitted for brevity Metadata Group of descriptive data about the entity. metadata.uniqueName * Attribute Type Type string Constraints regex: ^[a-z][a-z0-9-]$ Obtained From Developer Used as an ID for the entity. metadata.displayName * Attribute Type Type string Constraints None (freeform) Obtained From Developer Will be used as a display value for the entity where needed. metadata.description * Attribute Type Type string Constraints None (freeform) Obtained From Developer Gives more context and explanation for the entity. metadata.annotations Attribute Type Type dictionary Constraints dictionary(string, string) Obtained From Various Used to assign strongly typed labels to the entity which have meaning. metadata.links Attribute Type Type array Constraints Link Obtained From Developer List of Link used to provide additional references for the entity. metadata.tags Attribute Type Type string Constraints regex: ^[a-z-]+$ Obtained From Arbitrary List of arbitrary values to attach to the entity. Useful for making the entity searchable/groupable. Example uniqueName: curator-ui displayName: Curator UI description: The user interface for Curator annotations: github/project-slug: \"Development/petm-devops-curator\" gcp/project-slug: curator links: - # omitted for brevity (see below) tags: - devops - tools Link link.url * Attribute Type Type string Constraints URL ( rfc1738 ) Obtained From Arbitrary The link target. link.text * Attribute Type Type string Constraints None (freeform) Obtained From Arbitrary The text that will be used for the link. link.icon Attribute Type Type string Constraints regex: ^[a-z][a-z0-9-_]+$ Obtained From Curator Devs Name of the icon that can be used with the link. Example url: https://https://confluence.ssg.petsmart.com/display/TEC/Curator text: Curator Documentation icon: document Conventions entityReference Attribute Type Type string Constraints regex: ^(?<kind>(Solution\\|Component\\|Resource))+:(?<uniquename>[a-z][a-z0-9-]+)+$ Examples Component:curator-ui Resource:curator-db A concatenation of the Entity 'kind' and the entities unique name. ownerReference Attribute Type Type string Constraints regex: ^(?<ownertype>(Group\\|User)):(?<owner>[a-zA-Z-@._]+)$ Examples Group:pet-services-devs User:jestafford@petsmart.com A concatenation of the owner type and the owner name or email address.","title":"Common Objects"},{"location":"entities/common/#common-objects-and-conventions","text":"","title":"Common Objects and Conventions"},{"location":"entities/common/#entity","text":"Envelope for various entity kinds.","title":" Entity"},{"location":"entities/common/#apiversion","text":"Attribute Type Type string Constraints regex: ^curator\\/v[0-9]+$ Obtained From Development Platform Team Version of the entity object and enclosed specs.","title":"apiVersion*"},{"location":"entities/common/#kind","text":"Attribute Type Type string Constraints oneOf(Solution\\|Component\\|Resource) Obtained From Development Platform Team Describes the 'kind' contained within the spec . Value Description Solution Logical grouping of components and/or resource that make up a single solution or capability. Component A physically deployable and maintained entity within the system such as a service (e.g. API, worker, job, pipeline, etc.) or package (e.g. NuGet, Maven, NPM, etc.). Resource An infrastructure dependency for a component such as a database, cache, service bus, etc.","title":"kind*"},{"location":"entities/common/#metadata","text":"Attribute Type Type Metadata Constraints Metadata Obtained From Enterprise Architecture (EA)","title":"metadata*"},{"location":"entities/common/#spec","text":"Attribute Type Type see: Entity Types Constraints Dictated by kind Obtained From Curator Devs","title":"spec*"},{"location":"entities/common/#example","text":"apiVersion: curator/v1 kind: Component metadata: # omitted for brevity spec: # omitted for brevity","title":"Example"},{"location":"entities/common/#metadata_1","text":"Group of descriptive data about the entity.","title":" Metadata"},{"location":"entities/common/#metadatauniquename","text":"Attribute Type Type string Constraints regex: ^[a-z][a-z0-9-]$ Obtained From Developer Used as an ID for the entity.","title":"metadata.uniqueName*"},{"location":"entities/common/#metadatadisplayname","text":"Attribute Type Type string Constraints None (freeform) Obtained From Developer Will be used as a display value for the entity where needed.","title":"metadata.displayName*"},{"location":"entities/common/#metadatadescription","text":"Attribute Type Type string Constraints None (freeform) Obtained From Developer Gives more context and explanation for the entity.","title":"metadata.description*"},{"location":"entities/common/#metadataannotations","text":"Attribute Type Type dictionary Constraints dictionary(string, string) Obtained From Various Used to assign strongly typed labels to the entity which have meaning.","title":"metadata.annotations"},{"location":"entities/common/#metadatalinks","text":"Attribute Type Type array Constraints Link Obtained From Developer List of Link used to provide additional references for the entity.","title":"metadata.links"},{"location":"entities/common/#metadatatags","text":"Attribute Type Type string Constraints regex: ^[a-z-]+$ Obtained From Arbitrary List of arbitrary values to attach to the entity. Useful for making the entity searchable/groupable.","title":"metadata.tags"},{"location":"entities/common/#example_1","text":"uniqueName: curator-ui displayName: Curator UI description: The user interface for Curator annotations: github/project-slug: \"Development/petm-devops-curator\" gcp/project-slug: curator links: - # omitted for brevity (see below) tags: - devops - tools","title":"Example"},{"location":"entities/common/#link","text":"","title":" Link"},{"location":"entities/common/#linkurl","text":"Attribute Type Type string Constraints URL ( rfc1738 ) Obtained From Arbitrary The link target.","title":"link.url*"},{"location":"entities/common/#linktext","text":"Attribute Type Type string Constraints None (freeform) Obtained From Arbitrary The text that will be used for the link.","title":"link.text*"},{"location":"entities/common/#linkicon","text":"Attribute Type Type string Constraints regex: ^[a-z][a-z0-9-_]+$ Obtained From Curator Devs Name of the icon that can be used with the link.","title":"link.icon"},{"location":"entities/common/#example_2","text":"url: https://https://confluence.ssg.petsmart.com/display/TEC/Curator text: Curator Documentation icon: document","title":"Example"},{"location":"entities/common/#conventions","text":"","title":"Conventions"},{"location":"entities/common/#entityreference","text":"Attribute Type Type string Constraints regex: ^(?<kind>(Solution\\|Component\\|Resource))+:(?<uniquename>[a-z][a-z0-9-]+)+$ Examples Component:curator-ui Resource:curator-db A concatenation of the Entity 'kind' and the entities unique name.","title":"entityReference"},{"location":"entities/common/#ownerreference","text":"Attribute Type Type string Constraints regex: ^(?<ownertype>(Group\\|User)):(?<owner>[a-zA-Z-@._]+)$ Examples Group:pet-services-devs User:jestafford@petsmart.com A concatenation of the owner type and the owner name or email address.","title":" ownerReference"},{"location":"entities/kinds/","text":"Entity 'Kinds' Each 'kind' refers to a spec within the Entity Object . The objects documented below are what go into the spec section of the entity object and there for each property is prefixed with spec. to keep the context clear. Solution Generally, solutions describe a logical grouping of components of a particular subsystem. For example, when you have a single service that has been decomposed into separate physical components that handle various parts of the same capability such as an API, Message Consumer, Job and/or shared library. There are many times where the component(s) where created without respect to it being part of a Solution. In this case, you can use the Solution concept to retroactively 'regroup' the components without necessarily relocating them physically. Solutions are also used to represent systems that we do not own such as FSL, Salesforce Marketing Cloud, Commerce Cloud etc. Doing so allows them to be referenced by other components as having some type of relationship. spec.type * Attribute Type Type string Constraints oneOf(monorepo\\|polyrepo\\|external) Obtained From Developer Value Description monorepo All components in this solution reside in the same repository. polyrepo Components in this solution reside in several locations. external This solution represents an external platform that may or may not reside in source control. spec.subComponents Attribute Type Type array Constraints Component Obtained From Developer A list of Component that compose this solution. Solution Spec Example type: monorepo subComponents: - # omitted for brevity Component Components describe a physical deployable artifact such as a service or package/library. spec.urn * Attribute Type Type string Constraints regex: ^urn:(?<system>[a-z0-9-]+):(?<subdomain>[a-z][a-z0-9-]+):(?<component>[a-z][a-z0-9-]+)$ Obtained From Architects spec.subdomain * Attribute Type Type string Constraints regex: ^[a-z][a-z0-9-]+$ Obtained From Architects A recognized subdomain aligned to the Business Capability Model spec.owner * Attribute Type Type string Constraints convention: ownerReference Obtained From Developer Designated owner of the component. Can be a group or an individual. spec.lifecycle * Attribute Type Type string Constraints oneOf(experimental\\|production\\|deprecated\\|sunset) Obtained From Developer Describes where in the the lifecycle the component currently resides. Value Description experimental The component has not yet made it to production. production The component is currently in production and must be maintained. deprecated The component is scheduled for sunset or otherwise should not be further developed. sunset The component should no longer exist in production. spec.dependsOn A list of entity reference for entities on which this component depends. Attribute Type Type array Constraints convention: entityReference Obtained From Developer Component Spec Example urn: urn:petsmart:devops:curator-ui subdomain: devops owner: Group:curator-devs lifecycle: experimental dependsOn: - Component:curator-api Resource Resources describe the backing infrastructure on which the component depends. This does not include other services/component. spec.type * Attribute Type Type string Constraints oneOf(database\\|cache\\|messagebus\\|storage\\|datapipeline) Obtained From Developer The type of resource. spec.technology * Attribute Type Type string Constraints regex: ^[a-z][a-z0-9]+$ Obtained From Developer Description of the technology. This is a somewhat arbitrary value, but should be made to be consistent. TODO: consider making this configurable? spec.deploymentModel * Attribute Type Type string Constraints oneOf(cloud\\|datacenter\\|saas) Obtained From Developer Describes how the resource is deployed. Value Description cloudpaas The resource is deployed in the cloud using a PaaS offering. cloudsaas The resource is deployed in the cloud using a self-hosted PaaS solution. cloudcontainer The resource is deployed in the cloud as a container. onprem The resource is deployed on-prem using a self-hosted/traditional solution. onpremcontainer The resource is deployed on-prem as a container. saas The resource is provided by an external cloud provider and the true deployment model is unknown. spec.location * Attribute Type Type string Constraints oneOf(gcpsaas\\|gcpgke\\|gcpselfhosted\\|azure\\|onprem\\|saas) Obtained From Developer, Architects Describes where the resource is deployed. Value Description gcp The resource is deployed to Google Cloud Platform azure The resource is deployed to Microsoft Azure onprem The resource is deployed on-prem saas The resource is provided by an external SaaS provider (e.g. Aiven, Mongo Atlas, CloudAMQP, etc.) spec.notes Attribute Type Type string Constraints None (freeform) Obtained From Developer Freeform notes about the resource. Resource Example type: database technology: raven-db deploymentModel: cloudcontainer location: gcp notes: Deployed as a container inside of the Curator namespace.","title":"Specifications"},{"location":"entities/kinds/#entity-kinds","text":"Each 'kind' refers to a spec within the Entity Object . The objects documented below are what go into the spec section of the entity object and there for each property is prefixed with spec. to keep the context clear.","title":"Entity 'Kinds'"},{"location":"entities/kinds/#solution","text":"Generally, solutions describe a logical grouping of components of a particular subsystem. For example, when you have a single service that has been decomposed into separate physical components that handle various parts of the same capability such as an API, Message Consumer, Job and/or shared library. There are many times where the component(s) where created without respect to it being part of a Solution. In this case, you can use the Solution concept to retroactively 'regroup' the components without necessarily relocating them physically. Solutions are also used to represent systems that we do not own such as FSL, Salesforce Marketing Cloud, Commerce Cloud etc. Doing so allows them to be referenced by other components as having some type of relationship.","title":"Solution"},{"location":"entities/kinds/#spectype","text":"Attribute Type Type string Constraints oneOf(monorepo\\|polyrepo\\|external) Obtained From Developer Value Description monorepo All components in this solution reside in the same repository. polyrepo Components in this solution reside in several locations. external This solution represents an external platform that may or may not reside in source control.","title":"spec.type*"},{"location":"entities/kinds/#specsubcomponents","text":"Attribute Type Type array Constraints Component Obtained From Developer A list of Component that compose this solution.","title":"spec.subComponents"},{"location":"entities/kinds/#solution-spec-example","text":"type: monorepo subComponents: - # omitted for brevity","title":"Solution Spec Example"},{"location":"entities/kinds/#component","text":"Components describe a physical deployable artifact such as a service or package/library.","title":"Component"},{"location":"entities/kinds/#specurn","text":"Attribute Type Type string Constraints regex: ^urn:(?<system>[a-z0-9-]+):(?<subdomain>[a-z][a-z0-9-]+):(?<component>[a-z][a-z0-9-]+)$ Obtained From Architects","title":"spec.urn*"},{"location":"entities/kinds/#specsubdomain","text":"Attribute Type Type string Constraints regex: ^[a-z][a-z0-9-]+$ Obtained From Architects A recognized subdomain aligned to the Business Capability Model","title":"spec.subdomain*"},{"location":"entities/kinds/#specowner","text":"Attribute Type Type string Constraints convention: ownerReference Obtained From Developer Designated owner of the component. Can be a group or an individual.","title":"spec.owner*"},{"location":"entities/kinds/#speclifecycle","text":"Attribute Type Type string Constraints oneOf(experimental\\|production\\|deprecated\\|sunset) Obtained From Developer Describes where in the the lifecycle the component currently resides. Value Description experimental The component has not yet made it to production. production The component is currently in production and must be maintained. deprecated The component is scheduled for sunset or otherwise should not be further developed. sunset The component should no longer exist in production.","title":"spec.lifecycle*"},{"location":"entities/kinds/#specdependson","text":"A list of entity reference for entities on which this component depends. Attribute Type Type array Constraints convention: entityReference Obtained From Developer","title":"spec.dependsOn"},{"location":"entities/kinds/#component-spec-example","text":"urn: urn:petsmart:devops:curator-ui subdomain: devops owner: Group:curator-devs lifecycle: experimental dependsOn: - Component:curator-api","title":"Component Spec Example"},{"location":"entities/kinds/#resource","text":"Resources describe the backing infrastructure on which the component depends. This does not include other services/component.","title":"Resource"},{"location":"entities/kinds/#spectype_1","text":"Attribute Type Type string Constraints oneOf(database\\|cache\\|messagebus\\|storage\\|datapipeline) Obtained From Developer The type of resource.","title":"spec.type*"},{"location":"entities/kinds/#spectechnology","text":"Attribute Type Type string Constraints regex: ^[a-z][a-z0-9]+$ Obtained From Developer Description of the technology. This is a somewhat arbitrary value, but should be made to be consistent. TODO: consider making this configurable?","title":"spec.technology*"},{"location":"entities/kinds/#specdeploymentmodel","text":"Attribute Type Type string Constraints oneOf(cloud\\|datacenter\\|saas) Obtained From Developer Describes how the resource is deployed. Value Description cloudpaas The resource is deployed in the cloud using a PaaS offering. cloudsaas The resource is deployed in the cloud using a self-hosted PaaS solution. cloudcontainer The resource is deployed in the cloud as a container. onprem The resource is deployed on-prem using a self-hosted/traditional solution. onpremcontainer The resource is deployed on-prem as a container. saas The resource is provided by an external cloud provider and the true deployment model is unknown.","title":"spec.deploymentModel*"},{"location":"entities/kinds/#speclocation","text":"Attribute Type Type string Constraints oneOf(gcpsaas\\|gcpgke\\|gcpselfhosted\\|azure\\|onprem\\|saas) Obtained From Developer, Architects Describes where the resource is deployed. Value Description gcp The resource is deployed to Google Cloud Platform azure The resource is deployed to Microsoft Azure onprem The resource is deployed on-prem saas The resource is provided by an external SaaS provider (e.g. Aiven, Mongo Atlas, CloudAMQP, etc.)","title":"spec.location*"},{"location":"entities/kinds/#specnotes","text":"Attribute Type Type string Constraints None (freeform) Obtained From Developer Freeform notes about the resource.","title":"spec.notes"},{"location":"entities/kinds/#resource-example","text":"type: database technology: raven-db deploymentModel: cloudcontainer location: gcp notes: Deployed as a container inside of the Curator namespace.","title":"Resource Example"}]}